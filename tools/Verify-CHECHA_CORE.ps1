param(
    [switch]$Fix,
    [switch]$Quiet
)

$root = 'C:\CHECHA_CORE'

function Write-Info($msg){ if(-not $Quiet){ Write-Host $msg } }
function ResultRow([string]$Item,[string]$Expected,[string]$Status,[string]$Note){
    [pscustomobject]@{ Item=$Item; Expected=$Expected; Status=$Status; Note=$Note }
}

$results = @()

# 0) Root check
if(-not (Test-Path $root)){
    $results += ResultRow "Root" $root "FAIL" "–ü–∞–ø–∫–∞ –≤—ñ–¥—Å—É—Ç–Ω—è"
    $results | Format-Table -AutoSize
    Write-Error "Root folder not found: $root. –°—Ç–≤–æ—Ä–∏ C:\CHECHA_CORE —ñ —Ä–æ–∑–ø–∞–∫—É–π —Ç—É–¥–∏ –≤–º—ñ—Å—Ç –∞—Ä—Ö—ñ–≤—É."
    exit 1
} else {
    $results += ResultRow "Root" $root "OK" "–ó–Ω–∞–π–¥–µ–Ω–æ"
}

# 1) Detect common mistake: nested folder (double root)
# e.g.: C:\CHECHA_CORE\CHECHA_CORE_DayStart_Starter_v1.0\C03
$nested = Get-ChildItem -LiteralPath $root -Directory -ErrorAction SilentlyContinue | Where-Object {
    Test-Path (Join-Path $_.FullName 'C03') -and
    Test-Path (Join-Path $_.FullName 'C07') -and
    Test-Path (Join-Path $_.FullName 'G43') -and
    Test-Path (Join-Path $_.FullName 'scripts')
}

if($nested){
    $folder = $nested[0].FullName
    $results += ResultRow "NestedFolder" $folder "WARN" "–í–º—ñ—Å—Ç –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É—Å–µ—Ä–µ–¥–∏–Ω—ñ –≤–∫–ª–∞–¥–µ–Ω–æ—ó –ø–∞–ø–∫–∏"
    if($Fix){
        Write-Info "‚Üí –ü–µ—Ä–µ–º—ñ—â—É—é –≤–º—ñ—Å—Ç –∑ '$folder' —É '$root'..."
        Get-ChildItem -LiteralPath $folder -Force | ForEach-Object {
            $dest = Join-Path $root $_.Name
            if(Test-Path $dest){
                Write-Info "  Skip: —ñ—Å–Ω—É—î '$dest'"
            } else {
                Move-Item -LiteralPath $_.FullName -Destination $dest -Force
                Write-Info "  Moved: '$($_.FullName)' ‚Üí '$dest'"
            }
        }
        # –°–ø—Ä–æ–±—É—î–º–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—é –≤–∫–ª–∞–¥–µ–Ω—É –ø–∞–ø–∫—É
        try { Remove-Item -LiteralPath $folder -Force -Recurse -ErrorAction SilentlyContinue } catch {}
    } else {
        Write-Info "‚ö† –í–∏—è–≤–ª–µ–Ω–æ –≤–∫–ª–∞–¥–µ–Ω—É –ø–∞–ø–∫—É. –ó–∞–ø—É—Å—Ç–∏ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º -Fix, —â–æ–± –ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ –≤–º—ñ—Å—Ç –Ω–∞–≥–æ—Ä—É."
    }
} else {
    $results += ResultRow "NestedFolder" "(–Ω–µ –æ—á—ñ–∫—É—î—Ç—å—Å—è)" "OK" "–ù–µ–º–∞—î –≤–∫–ª–∞–¥–µ–Ω–æ—ó –æ–±–æ–ª–æ–Ω–∫–∏"
}

# 2) Expected dirs
$dirs = @(
    'C03',
    'C07',
    'G43\topics',
    'scripts'
)
foreach($d in $dirs){
    $p = Join-Path $root $d
    if(Test-Path $p){ $results += ResultRow "Dir" $p "OK" "–ó–Ω–∞–π–¥–µ–Ω–æ" }
    else { $results += ResultRow "Dir" $p "FAIL" "–í—ñ–¥—Å—É—Ç–Ω—è" }
}

# 3) Expected files
$files = @(
    'C03\LOG.md',
    'C07\REPORT.md',
    'C07\health-summary.md',
    'C07\KPI_TRACKER.md',
    'G43\topics\ITETA_Topic_003.md',
    'scripts\DayStart.ps1'
)
foreach($f in $files){
    $p = Join-Path $root $f
    if(Test-Path $p){ $results += ResultRow "File" $p "OK" "–ó–Ω–∞–π–¥–µ–Ω–æ" }
    else { $results += ResultRow "File" $p "FAIL" "–í—ñ–¥—Å—É—Ç–Ω—ñ–π" }
}

# 4) Sanity checks (lightweight)
$repPath = Join-Path $root 'C07\REPORT.md'
if(Test-Path $repPath){
    $rep = Get-Content $repPath -Raw -ErrorAction SilentlyContinue
    if($rep -match '###\s+üåÖ\s*Day Start'){ $results += ResultRow "REPORT.md" "–ú—ñ—Å—Ç–∏—Ç—å Day Start" "OK" "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–Ω–∞–π–¥–µ–Ω–æ" }
    else { $results += ResultRow "REPORT.md" "–ú—ñ—Å—Ç–∏—Ç—å Day Start" "WARN" "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)" }
}

$hsPath = Join-Path $root 'C07\health-summary.md'
if(Test-Path $hsPath){
    $hs = Get-Content $hsPath -Raw -ErrorAction SilentlyContinue
    if($hs -match '#\s*health-summary'){ $results += ResultRow "health-summary.md" "–Ñ –∑–∞–≥–æ–ª–æ–≤–æ–∫" "OK" "–í–∏–≥–ª—è–¥–∞—î –∫–æ—Ä–µ–∫—Ç–Ω–æ" }
}

# 5) Output
$ok = ($results | Where-Object { $_.Status -eq 'OK' }).Count
$warn = ($results | Where-Object { $_.Status -eq 'WARN' }).Count
$fail = ($results | Where-Object { $_.Status -eq 'FAIL' }).Count

if(-not $Quiet){ $results | Format-Table -AutoSize }

Write-Host ""
Write-Host "--- SUMMARY ---"
Write-Host "OK=$ok  WARN=$warn  FAIL=$fail"

if($fail -eq 0){
    Write-Host ""
    Write-Host "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–∏–¥–∞—Ç–Ω–∞. –ú–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏:"
    Write-Host "   PowerShell (–∞–¥–º—ñ–Ω) ‚Üí C:\CHECHA_CORE\scripts\DayStart.ps1"
} else {
    Write-Host ""
    Write-Host "‚ö† –Ñ –ø–æ–º–∏–ª–∫–∏. –í–∏–ø—Ä–∞–≤–∏ –≤—Ä—É—á–Ω—É –∞–±–æ –∑–∞–ø—É—Å—Ç–∏:"
    Write-Host "   PowerShell (–∞–¥–º—ñ–Ω) ‚Üí .\Verify-CHECHA_CORE.ps1 -Fix"
}

exit ([int]([bool]($fail -gt 0)))
